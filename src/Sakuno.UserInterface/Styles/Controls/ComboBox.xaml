<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ModernComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}" Padding="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />

        <Setter Property="ItemContainerStyle" Value="{DynamicResource ModernComboBoxItemStyle}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="False"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <ToggleButton Name="ToggleButton" OverridesDefaultStyle="True" Foreground="{DynamicResource InactiveForegroundBrushKey}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Focusable="False" IsTabStop="False" Grid.ColumnSpan="2">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Background="Transparent">
                                                <Border HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                    <Path Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M0,0 L3.5,4 7,0 z" />
                                                </Border>
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </Grid>
                        </Border>

                        <Popup Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Placement="Bottom" Focusable="False" FocusVisualStyle="{x:Null}" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border Background="{DynamicResource BackgroundBrushKey}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource BackgroundBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource AccentBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource InactiveBackgroundBrushKey}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource InactiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource AccentBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource AccentBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>