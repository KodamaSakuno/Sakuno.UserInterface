<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uic="clr-namespace:Sakuno.UserInterface.Controls">

    <Style x:Key="ModernComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}" Padding="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />

        <Setter Property="ItemContainerStyle" Value="{DynamicResource ModernComboBoxItemStyle}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <uic:SizeSharingPanel Background="Transparent">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <uic:SizeSharingPanel>
                                <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="False"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <ToggleButton Name="ToggleButton" Style="{DynamicResource DropDownMakerToggleButtonStyle}" Foreground="{DynamicResource InactiveForegroundBrushKey}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                            </uic:SizeSharingPanel>
                        </Border>

                        <Popup Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Placement="Bottom" Focusable="False" FocusVisualStyle="{x:Null}" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border Background="{DynamicResource BackgroundBrushKey}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </uic:SizeSharingPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource BackgroundBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource AccentBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource AccentBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource InactiveBackgroundBrushKey}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource InactiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrushKey}" />
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource AccentBrushKey}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>